[{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://cesaraustralia.github.io/seizer/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://cesaraustralia.github.io/seizer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alex Slavenko. Author, maintainer.","code":""},{"path":"https://cesaraustralia.github.io/seizer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Slavenko (2024). seizer: Seize Data Vis R Reins!. R package version 0.0.0.9000, https://cesaraustralia.github.io/seizer/, https://github.com/alexsla/seizer.","code":"@Manual{,   title = {seizer: Seize Data Vis in R by the Reins!},   author = {Alex Slavenko},   year = {2024},   note = {R package version 0.0.0.9000,     https://cesaraustralia.github.io/seizer/},   url = {https://github.com/alexsla/seizer}, }"},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"seizer-","dir":"","previous_headings":"","what":"Seize Data Vis in R by the Reins!","title":"Seize Data Vis in R by the Reins!","text":"seizer package designed make data visualisation quick, easy consistent Cesar staff. package contains functions fit general ggplot2 syntax, using can make sure figures always look adhere Cesar Australia style guide.","code":""},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Seize Data Vis in R by the Reins!","text":"seizer can installed running following code: may asked update packages, existing versions installed computer old. Updating may cause compatibility issues old code, suggest skipping updates first install attempt. package works fine, ’s nothing worry .","code":"# install package from GitHub require(devtools) devtools::install_github(\"cesaraustralia/seizer\")"},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"using-seizer","dir":"","previous_headings":"","what":"Using seizer","title":"Seize Data Vis in R by the Reins!","text":"seizer built work neatly ggplot2. familiar ggplot2 syntax, using package simple. idea build figures usually ggplot2. , can use supplied functions seizer transform figures consistent theme. ggplot2 figure, includes pretty much everything might include figure: aesthetics, mappings, titles, subtitles, legends, facets, etc. plot rendered default ggplot2 settings:  Now, just add theme_cesar() function transform plot, using theme elements designed fit data visualisation principles Cesar Australia style guide:  Notice “static” plot elements changes (colours, linewidths fonts labels, gridlines, backgrounds, etc.), colours actually mapped onto data using aes() function remained unchanged default values. might recall order change ggplot2 syntax need use scale_ family functions. seizer comes family scale_cesar functions, allow map Cesar Australia colour palettes onto figures:  next section contains information colour palettes use . final function use cesar_save(). wrapper function around ggsave() function may come across, uses several pre-determined presets generate outputs. match size resolution saved plot destination format. five presets: twitter, web, linkedin, facebook print. preset specified, function defaults print. also optional argument, logo, can used add Cesar logo top right plot setting logo = TRUE. turned default. can also specify destination pathway using path argument - default, plot saved working directory. Finally, export defaults .png format accepted format specified filename (e.g., “plot.jpeg”). example, wanted save plot web format (72dpi) logo, run following code: automatically exports last rendered plot working directory selected presets.","code":"p <- iris %>%   ggplot(aes(x = Sepal.Length, y = Petal.Length, colour = Sepal.Width, fill = Species)) + geom_point() + geom_smooth() + facet_wrap(~Species, scales = \"free\") + labs(title = \"This is a title\", subtitle = \"This is a subtitle\")  p #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' p <-   p + theme_cesar()  p #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' p <-   iris %>% ggplot(aes(x = Sepal.Length, y = Petal.Length, colour = Sepal.Width, fill = Species)) + geom_point() + geom_smooth(colour = ancient_lavastone) + facet_wrap(~Species, scales = \"free\") + labs(title = \"This is a title\", subtitle = \"This is a subtitle\") +   theme_cesar() + scale_colour_cesar_c(palette = \"galliano_c\") + scale_fill_cesar_d()  p #> `geom_smooth()` using method = 'loess' and formula = 'y ~ x' cesar_save(filename = \"cesar_web.png\", preset = \"web\", logo = T)"},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"cesar-australia-colour-palettes","dir":"","previous_headings":"","what":"Cesar Australia colour palettes","title":"Seize Data Vis in R by the Reins!","text":"Finally, seizer contains variety colour palettes can used data vis. derived colours Cesar Australia style guide, slight modifications hue brightness values make suitable data visualisation. explained , can easily plugged ggplot2 objects using scale_cesar family functions. However, can also access palettes directly using cesar_palettes see available palettes pull individual colours palettes - instance want use base R figure.","code":""},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"discrete-palettes","dir":"","previous_headings":"Cesar Australia colour palettes","what":"Discrete palettes","title":"Seize Data Vis in R by the Reins!","text":"seizer includes two discrete palettes, suitable mapping onto unordered categorical variables:  include 7 colours - groups data, colours recycled. alternative option discretise continuous colour scale (either sequential diverging) passing helpter function (see ) - may useful ordered categorical variables, note colours may end similar discern groups.","code":""},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"sequential-palettes","dir":"","previous_headings":"Cesar Australia colour palettes","what":"Sequential palettes","title":"Seize Data Vis in R by the Reins!","text":"seizer includes seven sequential palettes, suitable mapping onto continuous variables. based “primary” cesar colours, vary brightness values around single base hue. seven palettes :","code":""},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"diverging-palettes","dir":"","previous_headings":"Cesar Australia colour palettes","what":"Diverging palettes","title":"Seize Data Vis in R by the Reins!","text":"seizer includes four diverging palettes, suitable mapping onto continuous variables. especially useful visualising data distinct, meaningful midpoint - example, negative vs. positive values, centered around zero. Alternatively, biologically meaningful midpoint needs emphasised. four palettes :  Please note diverging palettes especially, care given use palettes colour blind friendly. palettes discernible people either protanopia deuteranopia-type colour blindness, gold_teal_d teal_orange_d may best ones use.","code":""},{"path":"https://cesaraustralia.github.io/seizer/index.html","id":"helper-functions","dir":"","previous_headings":"Cesar Australia colour palettes","what":"Helper functions","title":"Seize Data Vis in R by the Reins!","text":"helper function included seizer generate colour palettes user-defined length. cesar_rampr(), accepts arguments number colours requested, colour palette (use names(cesar_palettes) view available palettes), alpha value transparency, logical argument reverse palette, requested. generates vector colours, can used manually plotting. discrete palette selected, function simply returns colours palette order, recycling colours n > 7. continuous palette selected, function performs linear interpolation discretise palette return several discrete values length n.  Finally, two additional helper functions includes, cesar_pal() cesar_gradient_n_pal(). bit complicated, serve wrappers around cesar_rampr() facilitate use scale_cesar functions. words - can safely ignore , feel free play around ’d like.","code":"new_pal <- cesar_rampr(n = 15, pal_name = \"oxford_blue_c\", alpha = .7)  new_pal2 <- cesar_rampr(n = 4, pal_name = \"cesar_light\", reverse = T)  plot(as_palette(list(new_pal, new_pal2)))"},{"path":"https://cesaraustralia.github.io/seizer/reference/adobe_avenue.html","id":null,"dir":"Reference","previous_headings":"","what":"adobe avenue — adobe_avenue","title":"adobe avenue — adobe_avenue","text":"Adobe avenue","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/adobe_avenue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adobe avenue — adobe_avenue","text":"","code":"adobe_avenue"},{"path":"https://cesaraustralia.github.io/seizer/reference/adobe_avenue.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"adobe avenue — adobe_avenue","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/ancient_lavastone.html","id":null,"dir":"Reference","previous_headings":"","what":"ancient lavastone — ancient_lavastone","title":"ancient lavastone — ancient_lavastone","text":"Ancient lavastone","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/ancient_lavastone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ancient lavastone — ancient_lavastone","text":"","code":"ancient_lavastone"},{"path":"https://cesaraustralia.github.io/seizer/reference/ancient_lavastone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ancient lavastone — ancient_lavastone","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_gradient_n_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Cesar gradient palette — cesar_gradient_n_pal","title":"Cesar gradient palette — cesar_gradient_n_pal","text":"Helper function incorporate Cesar colors scale fills","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_gradient_n_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cesar gradient palette — cesar_gradient_n_pal","text":"","code":"cesar_gradient_n_pal(   palette = \"cesar_green_c\",   alpha = 1,   reverse = T,   na.color = NA )"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_gradient_n_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cesar gradient palette — cesar_gradient_n_pal","text":"palette Choose 'cesar_palettes' list alpha sets transparency color reverse true, reverses order palette na.color color NA values","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_green.html","id":null,"dir":"Reference","previous_headings":"","what":"cesar green — cesar_green","title":"cesar green — cesar_green","text":"Cesar green","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_green.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cesar green — cesar_green","text":"","code":"cesar_green"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_green.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"cesar green — cesar_green","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_pal.html","id":null,"dir":"Reference","previous_headings":"","what":"Cesar palette with ramped colors — cesar_pal","title":"Cesar palette with ramped colors — cesar_pal","text":"Helper function incorporate Cesar colors scale fills","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_pal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cesar palette with ramped colors — cesar_pal","text":"","code":"cesar_pal(palette = \"cesar\", alpha = 1, reverse = FALSE)"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_pal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cesar palette with ramped colors — cesar_pal","text":"palette Choose 'cesar_palettes' list alpha sets transparency color reverse true, reverses order palette","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_palettes.html","id":null,"dir":"Reference","previous_headings":"","what":"List of Cesar Colour Palettes — cesar_palettes","title":"List of Cesar Colour Palettes — cesar_palettes","text":"Sets colour palettes use Cesar Australia data visualisations. Colours stored named list. Use palette name position call colours. Colour sets stored name first colour: Calling cesar_palettes$cesar return seven color palette Cesar green base. Calling cesar_palettes$cesar_green_c return interpolated ramp 10 colors Cesar green.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_palettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of Cesar Colour Palettes — cesar_palettes","text":"","code":"cesar_palettes"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_palettes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of Cesar Colour Palettes — cesar_palettes","text":"object class list length 13.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_palettes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List of Cesar Colour Palettes — cesar_palettes","text":"","code":"if (FALSE) { # \\dontrun{  # List names of palettes available names(cesar_palettes)  show_col(cesar_palettes$cesar) show_col(cesar_palettes$gold_teal_d) show_col(cesar_palettes$warm_grey_c) } # }"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_rampr.html","id":null,"dir":"Reference","previous_headings":"","what":"Palette interpolation — cesar_rampr","title":"Palette interpolation — cesar_rampr","text":"Generate palette linear interpolation. discrete palette selected, colors recycled length desired vector.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_rampr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Palette interpolation — cesar_rampr","text":"","code":"cesar_rampr(n, pal_name = \"cesar\", alpha = 1, reverse = FALSE)"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_rampr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Palette interpolation — cesar_rampr","text":"n number interpolation points pal_name name palette alpha sets transparency color reverse true, reverses order","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_rampr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Palette interpolation — cesar_rampr","text":"Chooses palette use ggplot2","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_rampr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Palette interpolation — cesar_rampr","text":"","code":"if (FALSE) { # \\dontrun{ #View different interpolations of palettes cesar_rampr(\"cesar_green_c\") %>%  scales::show_col() cesar_rampr(\"cesar_green_c\", n = 10) %>% scales::show_col() cesar_rampr(\"cesar_green_c\", n = 100) } # }"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_save.html","id":null,"dir":"Reference","previous_headings":"","what":"Save Plot — cesar_save","title":"Save Plot — cesar_save","text":"Wrapper around ggplot2::ggsave Cesar standards","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_save.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save Plot — cesar_save","text":"","code":"cesar_save(   filename,   plot = last_plot(),   path = NULL,   preset = \"print\",   logo = FALSE,   ... )"},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_save.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save Plot — cesar_save","text":"filename File name create disk, png unless otherwise specified plot Plot save, defaults last plot displayed. path Path directory save plot : path filename combined create fully qualified file name. Defaults working directory. preset Passes pre-determined values arguments scale, width, height dpi based type output visualisation required . Accepts one c(\"twitter\", \"web\", \"linkedin\", \"facebook\", \"print\"). Deafults \"print\". logo TRUE add Cesar logo top right. Defaults FALSE ... additional arguments pass ggsave","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_save.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save Plot — cesar_save","text":"exports file Cesar dimensions","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/cesar_save.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save Plot — cesar_save","text":"","code":"if (FALSE) { # \\dontrun{ library(ggplot2) ggplot(iris, aes(Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() + theme_cesar() #default save cesar_save(\"out/sepal.png\") #defaults to png if not specified (.pdf, .svg, .jpeg) cesar_save(\"out/sepal\") #change the preset cesar_save(\"out/sepal.jpeg\", preset = \"twitter\")  } # }"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_caption.html","id":null,"dir":"Reference","previous_headings":"","what":"Color caption default — color_caption","title":"Color caption default — color_caption","text":"sets color caption","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_caption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color caption default — color_caption","text":"","code":"color_caption"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_caption.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Color caption default — color_caption","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_gridline.html","id":null,"dir":"Reference","previous_headings":"","what":"Gridline color default — color_gridline","title":"Gridline color default — color_gridline","text":"sets gridline colors","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_gridline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gridline color default — color_gridline","text":"","code":"color_gridline"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_gridline.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Gridline color default — color_gridline","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_plot_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot colour default — color_plot_text","title":"Plot colour default — color_plot_text","text":"sets plot color text","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_plot_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot colour default — color_plot_text","text":"","code":"color_plot_text"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_plot_text.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plot colour default — color_plot_text","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_strip_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip background color default — color_strip_background","title":"Strip background color default — color_strip_background","text":"sets strip background colors","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_strip_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip background color default — color_strip_background","text":"","code":"color_strip_background"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_strip_background.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Strip background color default — color_strip_background","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_strip_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Strip text color default — color_strip_text","title":"Strip text color default — color_strip_text","text":"sets strip text colors","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_strip_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strip text color default — color_strip_text","text":"","code":"color_strip_text"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_strip_text.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Strip text color default — color_strip_text","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_subtitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Subtitle colour default — color_subtitle","title":"Subtitle colour default — color_subtitle","text":"sets color caption","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_subtitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subtitle colour default — color_subtitle","text":"","code":"color_subtitle"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_subtitle.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subtitle colour default — color_subtitle","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Title colour default — color_title","title":"Title colour default — color_title","text":"sets title color","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/color_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title colour default — color_title","text":"","code":"color_title"},{"path":"https://cesaraustralia.github.io/seizer/reference/color_title.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Title colour default — color_title","text":"object class character length 1.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/dark_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"dark grey — dark_grey","title":"dark grey — dark_grey","text":"Dark grey","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/dark_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dark grey — dark_grey","text":"","code":"dark_grey"},{"path":"https://cesaraustralia.github.io/seizer/reference/dark_grey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"dark grey — dark_grey","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/defense_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"defense matrix — defense_matrix","title":"defense matrix — defense_matrix","text":"Defense matrix","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/defense_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"defense matrix — defense_matrix","text":"","code":"defense_matrix"},{"path":"https://cesaraustralia.github.io/seizer/reference/defense_matrix.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"defense matrix — defense_matrix","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/galliano.html","id":null,"dir":"Reference","previous_headings":"","what":"galliano — galliano","title":"galliano — galliano","text":"Galliano","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/galliano.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"galliano — galliano","text":"","code":"galliano"},{"path":"https://cesaraustralia.github.io/seizer/reference/galliano.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"galliano — galliano","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/gold_bullion.html","id":null,"dir":"Reference","previous_headings":"","what":"gold bullion — gold_bullion","title":"gold bullion — gold_bullion","text":"Gold bullion","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/gold_bullion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gold bullion — gold_bullion","text":"","code":"gold_bullion"},{"path":"https://cesaraustralia.github.io/seizer/reference/gold_bullion.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"gold bullion — gold_bullion","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/hobgoblin.html","id":null,"dir":"Reference","previous_headings":"","what":"hobgoblin — hobgoblin","title":"hobgoblin — hobgoblin","text":"Hobgoblin","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/hobgoblin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hobgoblin — hobgoblin","text":"","code":"hobgoblin"},{"path":"https://cesaraustralia.github.io/seizer/reference/hobgoblin.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"hobgoblin — hobgoblin","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/ice_cold.html","id":null,"dir":"Reference","previous_headings":"","what":"ice cold — ice_cold","title":"ice cold — ice_cold","text":"Ice cold","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/ice_cold.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ice cold — ice_cold","text":"","code":"ice_cold"},{"path":"https://cesaraustralia.github.io/seizer/reference/ice_cold.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"ice cold — ice_cold","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/key_lime.html","id":null,"dir":"Reference","previous_headings":"","what":"key lime — key_lime","title":"key lime — key_lime","text":"Key lime","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/key_lime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"key lime — key_lime","text":"","code":"key_lime"},{"path":"https://cesaraustralia.github.io/seizer/reference/key_lime.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"key lime — key_lime","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/light_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"light grey — light_grey","title":"light grey — light_grey","text":"Light grey","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/light_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"light grey — light_grey","text":"","code":"light_grey"},{"path":"https://cesaraustralia.github.io/seizer/reference/light_grey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"light grey — light_grey","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/mid_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"mid grey — mid_grey","title":"mid grey — mid_grey","text":"Mid grey","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/mid_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mid grey — mid_grey","text":"","code":"mid_grey"},{"path":"https://cesaraustralia.github.io/seizer/reference/mid_grey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mid grey — mid_grey","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/oxford_blue.html","id":null,"dir":"Reference","previous_headings":"","what":"oxford blue — oxford_blue","title":"oxford blue — oxford_blue","text":"Oxford blue","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/oxford_blue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"oxford blue — oxford_blue","text":"","code":"oxford_blue"},{"path":"https://cesaraustralia.github.io/seizer/reference/oxford_blue.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"oxford blue — oxford_blue","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://cesaraustralia.github.io/seizer/reference/rufous.html","id":null,"dir":"Reference","previous_headings":"","what":"rufous — rufous","title":"rufous — rufous","text":"Rufous","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/rufous.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rufous — rufous","text":"","code":"rufous"},{"path":"https://cesaraustralia.github.io/seizer/reference/rufous.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"rufous — rufous","text":"object class character length 1.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/scale_cesar.html","id":null,"dir":"Reference","previous_headings":"","what":"Cesar colour for ggplot2 — scale_colour_cesar_d","title":"Cesar colour for ggplot2 — scale_colour_cesar_d","text":"Cesar colour ggplot2","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/scale_cesar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cesar colour for ggplot2 — scale_colour_cesar_d","text":"","code":"scale_colour_cesar_d(   name = waiver(),   ...,   alpha = 1,   reverse = FALSE,   palette = \"cesar\",   aesthetics = \"colour\" )  scale_fill_cesar_d(   name = waiver(),   ...,   alpha = 1,   reverse = FALSE,   palette = \"cesar\",   aesthetics = \"fill\" )  scale_colour_cesar_c(   name = waiver(),   ...,   alpha = 1,   reverse = FALSE,   palette = \"cesar_green_c\",   guide = \"colourbar\",   aesthetics = \"colour\",   na.value = \"#AFAFAF\" )  scale_fill_cesar_c(   name = waiver(),   ...,   alpha = 1,   reverse = FALSE,   palette = \"cesar_green_c\",   guide = \"colourbar\",   aesthetics = \"fill\",   na.value = \"#AFAFAF\" )  scale_colour_cesar_b(   name = waiver(),   ...,   alpha = 1,   reverse = FALSE,   palette = \"cesar_green_c\",   guide = \"coloursteps\",   aesthetics = \"colour\",   na.value = \"#AFAFAF\" )  scale_fill_cesar_b(   name = waiver(),   ...,   alpha = 1,   reverse = FALSE,   palette = \"cesar_green_c\",   guide = \"coloursteps\",   aesthetics = \"fill\",   na.value = \"#AFAFAF\" )  scale_colour_cesar_g(   name = waiver(),   ...,   mid = 0,   alpha = 1,   reverse = FALSE,   palette = \"green_brown_d\",   guide = \"colourbar\",   aesthetics = \"colour\",   na.value = \"#AFAFAF\" )  scale_fill_cesar_g(   name = waiver(),   ...,   mid = 0,   alpha = 1,   reverse = FALSE,   palette = \"green_brown_d\",   guide = \"colourbar\",   aesthetics = \"fill\",   na.value = \"#AFAFAF\" )"},{"path":"https://cesaraustralia.github.io/seizer/reference/scale_cesar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cesar colour for ggplot2 — scale_colour_cesar_d","text":"name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. ... arguments passed discrete_scale(), continuous_scale(), binned_scale() control name, limits, breaks, labels forth. alpha sets transparency color reverse true, reverses order palette palette Choose 'cesar_palettes' list aesthetics Character string vector character strings listing name(s) aesthetic(s) scale works . can useful, example, apply colour settings colour fill aesthetics time, via aesthetics = c(\"colour\", \"fill\"). guide function used create guide name. See guides() information. na.value Missing values replaced value.","code":""},{"path":[]},{"path":"https://cesaraustralia.github.io/seizer/reference/scale_cesar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cesar colour for ggplot2 — scale_colour_cesar_d","text":"","code":"library(ggplot2)  # Use the cesar palette with discrete data (default) txsamp <- subset(txhousing, city %in%   c(\"Houston\", \"Fort Worth\", \"San Antonio\", \"Dallas\", \"Austin\")) (d <- ggplot(data = txsamp, aes(x = sales, y = median)) +    geom_point(aes(colour = city)))  d + theme_cesar() + scale_colour_cesar_d()   # Change scale label d + theme_cesar() + scale_colour_cesar_d(\"City\\nCenter\")   # Select palette to use from names(cesar_palettes) d + theme_cesar() + scale_colour_cesar_d(palette = \"cesar_light\")  d + theme_cesar() + scale_colour_cesar_d(palette = \"galliano_c\") #> Warning: continuous palette selected and will discretised; consider using one of c(\"cesar\", \"cesar_light\") instead   # scale_fill_cesar_d works just the same as # scale_colour_cesar_d but for fill colours p <- ggplot(txsamp, aes(x = median, fill = city)) +   geom_histogram(position = \"dodge\", binwidth = 15000) p + theme_cesar() + scale_fill_cesar_d()  # the order of colour can be reversed p + theme_cesar() + scale_fill_cesar_d(reverse = T)   # Use cesar_c with continuous data (v <- ggplot(faithfuld) +   geom_tile(aes(waiting, eruptions, fill = density)))  v + theme_cesar() + scale_fill_cesar_c()  v + theme_cesar() + scale_fill_cesar_c(palette = \"hobgoblin_c\")   # Use cesar_b to bin continuous data before mapping v + theme_cesar() + scale_fill_cesar_b()   # Use cesar_g for divergent scales ggplot(faithfuld, aes(waiting, eruptions)) + geom_raster(aes(fill = density)) + scale_fill_cesar_g(mid = 0.02) + theme_cesar()"},{"path":"https://cesaraustralia.github.io/seizer/reference/theme_cesar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Standard Cesar Plots — theme_cesar","title":"Create Standard Cesar Plots — theme_cesar","text":"function converts ggplot object Cesar theme. default font Inter","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/theme_cesar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Standard Cesar Plots — theme_cesar","text":"","code":"theme_cesar(   font_title,   font_subtitle,   font_plot,   font_caption,   facet_space = 2,   text_scale = 1,   ... )"},{"path":"https://cesaraustralia.github.io/seizer/reference/theme_cesar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Standard Cesar Plots — theme_cesar","text":"font_title font family titles, defaults Inter/Arial font_subtitle font family subtitles, defaults Inter/Arial font_plot font family plot space, defaults Inter/Arial font_caption font family captions, defaults Inter/Arial facet_space controls far apart facets text_scale scalar grow/shrink text defined within ... pass parameters theme already defined within","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/theme_cesar.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Standard Cesar Plots — theme_cesar","text":"","code":"if (FALSE) { # \\dontrun{ library(systemfonts) library(ggplot2) ggplot(iris, aes(Sepal.Length, y = Sepal.Width, colour = Species)) +   geom_point() + theme_cesar()   } # }"},{"path":"https://cesaraustralia.github.io/seizer/reference/warm_grey.html","id":null,"dir":"Reference","previous_headings":"","what":"warm grey — warm_grey","title":"warm grey — warm_grey","text":"Warm grey","code":""},{"path":"https://cesaraustralia.github.io/seizer/reference/warm_grey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"warm grey — warm_grey","text":"","code":"warm_grey"},{"path":"https://cesaraustralia.github.io/seizer/reference/warm_grey.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"warm grey — warm_grey","text":"object class character length 1.","code":""},{"path":[]}]
